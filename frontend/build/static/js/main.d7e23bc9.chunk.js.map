{"version":3,"sources":["api.js","charts.js","App.jsx","index.js"],"names":["API_BASE","Chart","register","registerables","MistakeChart","_ref","data","chartData","labels","datasets","label","blunders","mistakes","inaccuracies","backgroundColor","borderColor","borderWidth","_jsxs","className","children","_jsx","Bar","options","responsive","plugins","legend","display","scales","y","beginAtZero","TimeChart","_ref2","opening","middlegame","endgame","tension","Line","OpeningChart","_ref3","topOpenings","slice","map","name","Pie","position","App","_analysis$mistakes$","games","setGames","useState","selectedGame","setSelectedGame","analysis","setAnalysis","stats","setStats","username","setUsername","isAnalyzing","setIsAnalyzing","useEffect","fetchPlayerGames","async","response","fetch","json","type","value","onChange","e","target","placeholder","accept","file","files","reader","FileReader","onload","pgnText","result","method","body","ok","Error","importPgn","readAsText","game","onClick","id","white","black","date","headers","JSON","stringify","game_id","gameId","analyzeGame","statsResult","getPlayerStats","disabled","Chessboard","fen_before","boardWidth","summary","white_mistakes","black_mistakes","worst_mistake","move_number","move_san","eval_diff","mistakeDistribution","timePressureStats","openingStats","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7e23bc9.chunk.js","sourcesContent":["// api.js\r\nconst API_BASE = '/api';\r\n\r\nexport const analyzeGame = async (gameId) => {\r\n  const response = await fetch(`${API_BASE}/analyze`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ game_id: gameId })\r\n  });\r\n  \r\n  if (!response.ok) {\r\n    throw new Error('Analysis failed');\r\n  }\r\n  \r\n  return response.json();\r\n};\r\n\r\nexport const importPgn = async (pgnText) => {\r\n  const response = await fetch(`${API_BASE}/import`, {\r\n    method: 'POST',\r\n    body: pgnText\r\n  });\r\n  \r\n  if (!response.ok) {\r\n    throw new Error('Import failed');\r\n  }\r\n  \r\n  return response.json();\r\n};\r\n\r\nexport const getPlayerStats = async (username) => {\r\n  const response = await fetch(`${API_BASE}/stats?username=${username}`);\r\n  \r\n  if (!response.ok) {\r\n    throw new Error('Failed to get stats');\r\n  }\r\n  \r\n  return response.json();\r\n};\r\n\r\nexport const getPlayerGames = async (username) => {\r\n  const response = await fetch(`${API_BASE}/games?username=${username}`);\r\n  \r\n  if (!response.ok) {\r\n    throw new Error('Failed to get games');\r\n  }\r\n  \r\n  return response.json();\r\n};\r\n\r\nexport const getGameAnalysis = async (gameId) => {\r\n  const response = await fetch(`${API_BASE}/analysis/${gameId}`);\r\n  \r\n  if (!response.ok) {\r\n    throw new Error('Failed to get analysis');\r\n  }\r\n  \r\n  return response.json();\r\n};","// charts.jsx\r\nimport React from 'react';\r\nimport { Bar, Line, Pie } from 'react-chartjs-2';\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\n\r\nexport const MistakeChart = ({ data }) => {\r\n  const chartData = {\r\n    labels: ['Blunders', 'Mistakes', 'Inaccuracies'],\r\n    datasets: [{\r\n      label: 'Mistakes by Type',\r\n      data: [data.blunders, data.mistakes, data.inaccuracies],\r\n      backgroundColor: [\r\n        'rgba(239, 68, 68, 0.7)',\r\n        'rgba(249, 115, 22, 0.7)',\r\n        'rgba(234, 179, 8, 0.7)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(239, 68, 68, 1)',\r\n        'rgba(249, 115, 22, 1)',\r\n        'rgba(234, 179, 8, 1)'\r\n      ],\r\n      borderWidth: 1\r\n    }]\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-4 rounded shadow\">\r\n      <h3 className=\"font-medium mb-2\">Mistake Distribution</h3>\r\n      <Bar \r\n        data={chartData}\r\n        options={{\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              display: false\r\n            }\r\n          },\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const TimeChart = ({ data }) => {\r\n  const chartData = {\r\n    labels: ['Opening', 'Middlegame', 'Endgame'],\r\n    datasets: [{\r\n      label: 'Mistakes by Game Phase',\r\n      data: [data.opening, data.middlegame, data.endgame],\r\n      backgroundColor: 'rgba(79, 70, 229, 0.7)',\r\n      borderColor: 'rgba(79, 70, 229, 1)',\r\n      borderWidth: 1,\r\n      tension: 0.1\r\n    }]\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-4 rounded shadow\">\r\n      <h3 className=\"font-medium mb-2\">Mistakes by Game Phase</h3>\r\n      <Line \r\n        data={chartData}\r\n        options={{\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              display: false\r\n            }\r\n          },\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const OpeningChart = ({ data }) => {\r\n  const topOpenings = data.slice(0, 5);\r\n  const chartData = {\r\n    labels: topOpenings.map(opening => opening.name),\r\n    datasets: [{\r\n      label: 'Mistakes per Opening',\r\n      data: topOpenings.map(opening => opening.mistakes),\r\n      backgroundColor: [\r\n        'rgba(99, 102, 241, 0.7)',\r\n        'rgba(129, 140, 248, 0.7)',\r\n        'rgba(165, 180, 252, 0.7)',\r\n        'rgba(199, 210, 254, 0.7)',\r\n        'rgba(224, 231, 255, 0.7)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(99, 102, 241, 1)',\r\n        'rgba(129, 140, 248, 1)',\r\n        'rgba(165, 180, 252, 1)',\r\n        'rgba(199, 210, 254, 1)',\r\n        'rgba(224, 231, 255, 1)'\r\n      ],\r\n      borderWidth: 1\r\n    }]\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-4 rounded shadow\">\r\n      <h3 className=\"font-medium mb-2\">Top Openings by Mistakes</h3>\r\n      <Pie \r\n        data={chartData}\r\n        options={{\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              position: 'right'\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};","// App.jsx (Main Frontend Component)\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Chessboard } from 'react-chessboard';\r\nimport { analyzeGame, importPgn, getPlayerStats } from './api';\r\nimport { MistakeChart, TimeChart, OpeningChart } from './charts';\r\n\r\nconst App = () => {\r\n  const [games, setGames] = useState([]);\r\n  const [selectedGame, setSelectedGame] = useState(null);\r\n  const [analysis, setAnalysis] = useState(null);\r\n  const [stats, setStats] = useState(null);\r\n  const [username, setUsername] = useState('');\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (username) {\r\n      fetchPlayerGames();\r\n    }\r\n  }, [username]);\r\n\r\n  const fetchPlayerGames = async () => {\r\n    const response = await fetch(`/api/games?username=${username}`);\r\n    const data = await response.json();\r\n    setGames(data);\r\n  };\r\n\r\n  const handleFileUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    \r\n    reader.onload = async (e) => {\r\n      const pgnText = e.target.result;\r\n      await importPgn(pgnText);\r\n      fetchPlayerGames();\r\n    };\r\n    \r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const analyzeSelectedGame = async () => {\r\n    if (!selectedGame) return;\r\n    \r\n    setIsAnalyzing(true);\r\n    try {\r\n      const result = await analyzeGame(selectedGame.id);\r\n      setAnalysis(result);\r\n      \r\n      // Update stats after analysis\r\n      const statsResult = await getPlayerStats(username);\r\n      setStats(statsResult);\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <header className=\"bg-indigo-600 text-white p-4\">\r\n        <h1 className=\"text-2xl font-bold\">Chess Mistake Analyzer</h1>\r\n      </header>\r\n      \r\n      <main className=\"container mx-auto p-4\">\r\n        <div className=\"mb-6\">\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"Enter your chess username\"\r\n            className=\"p-2 border rounded\"\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\".pgn\"\r\n            onChange={handleFileUpload}\r\n            className=\"ml-4 p-2\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n          <div className=\"lg:col-span-1\">\r\n            <div className=\"bg-white p-4 rounded shadow\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">Your Games</h2>\r\n              <div className=\"space-y-2 max-h-96 overflow-y-auto\">\r\n                {games.map(game => (\r\n                  <div \r\n                    key={game.id}\r\n                    onClick={() => setSelectedGame(game)}\r\n                    className={`p-2 cursor-pointer rounded ${selectedGame?.id === game.id ? 'bg-indigo-100' : 'hover:bg-gray-100'}`}\r\n                  >\r\n                    <div className=\"flex justify-between\">\r\n                      <span>{game.white} vs {game.black}</span>\r\n                      <span>{game.result}</span>\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-500\">{game.date}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"lg:col-span-2 space-y-6\">\r\n            {selectedGame && (\r\n              <div className=\"bg-white p-4 rounded shadow\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <h2 className=\"text-xl font-semibold\">\r\n                    {selectedGame.white} vs {selectedGame.black} - {selectedGame.result}\r\n                  </h2>\r\n                  <button\r\n                    onClick={analyzeSelectedGame}\r\n                    disabled={isAnalyzing}\r\n                    className=\"bg-indigo-600 text-white px-4 py-2 rounded disabled:opacity-50\"\r\n                  >\r\n                    {isAnalyzing ? 'Analyzing...' : 'Analyze Game'}\r\n                  </button>\r\n                </div>\r\n                \r\n                {analysis && (\r\n                  <div className=\"mt-4\">\r\n                    <h3 className=\"text-lg font-medium mb-2\">Game Analysis</h3>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                      <div>\r\n                        <Chessboard \r\n                          position={analysis.mistakes[0]?.fen_before || 'start'} \r\n                          boardWidth={400}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <h4 className=\"font-medium\">Mistakes Summary</h4>\r\n                        <p>White mistakes: {analysis.summary.white_mistakes}</p>\r\n                        <p>Black mistakes: {analysis.summary.black_mistakes}</p>\r\n                        \r\n                        {analysis.summary.worst_mistake && (\r\n                          <div className=\"mt-4\">\r\n                            <h4 className=\"font-medium\">Worst Mistake</h4>\r\n                            <p>Move {analysis.summary.worst_mistake.move_number}: \r\n                              {analysis.summary.worst_mistake.move_san}</p>\r\n                            <p>Evaluation change: {analysis.summary.worst_mistake.eval_diff}</p>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n            \r\n            {stats && (\r\n              <div className=\"bg-white p-4 rounded shadow\">\r\n                <h2 className=\"text-xl font-semibold mb-4\">Your Statistics</h2>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  <MistakeChart data={stats.mistakeDistribution} />\r\n                  <TimeChart data={stats.timePressureStats} />\r\n                  <OpeningChart data={stats.openingStats} />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}